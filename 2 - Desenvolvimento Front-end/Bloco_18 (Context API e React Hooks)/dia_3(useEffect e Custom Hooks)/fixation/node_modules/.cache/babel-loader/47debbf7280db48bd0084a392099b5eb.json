{"ast":null,"code":"var _s = $RefreshSig$();\n\n// A cada 10 segundos ele gera e exibe na tela um número aleatório de 1 a 100;\n// Se o número for múltiplo de 3 ou 5, uma mensagem \"Acerto\" é exibida na tela;\n// A mensagem de acerto é removida 4 segundos depois de ser exibida;\n// O timer é removido quando o componente é desmontado.\nimport React, { useState } from 'react';\n\nconst Timer = () => {\n  _s();\n\n  const [randomNum, setRandomNum] = useState('');\n  const [timer, setTimer] = useState(0);\n\n  const genRandomNum = () => {\n    setRandomNum(Math.floor(Math.random() * 100) + 1);\n  };\n\n  genRandomNum();\n  return [randomNum];\n};\n\n_s(Timer, \"R1qAI+xUQRk45+s5EmW6ODrRS08=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/arthur/Documentos/Trybe/trybe-exercises/2 - Desenvolvimento Front-end/Bloco_18 (Context API e React Hooks)/dia_3(useEffect e Custom Hooks)/fixation/src/Timer.js"],"names":["React","useState","Timer","randomNum","setRandomNum","timer","setTimer","genRandomNum","Math","floor","random"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMM,YAAY,GAAG,MAAM;AACzBH,IAAAA,YAAY,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAAnC,CAAZ;AAED,GAHD;;AAIAH,EAAAA,YAAY;AAEZ,SAAO,CAACJ,SAAD,CAAP;AACD,CAXD;;GAAMD,K;;KAAAA,K;AAaN,eAAeA,KAAf","sourcesContent":["// A cada 10 segundos ele gera e exibe na tela um número aleatório de 1 a 100;\n// Se o número for múltiplo de 3 ou 5, uma mensagem \"Acerto\" é exibida na tela;\n// A mensagem de acerto é removida 4 segundos depois de ser exibida;\n// O timer é removido quando o componente é desmontado.\nimport React, { useState } from 'react';\n\nconst Timer = () => {\n  const [randomNum, setRandomNum] = useState('')\n  const [timer, setTimer] = useState(0)\n\n  const genRandomNum = () => {\n    setRandomNum(Math.floor(Math.random() * 100) + 1)\n\n  }\n  genRandomNum();\n  \n  return [randomNum]\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}