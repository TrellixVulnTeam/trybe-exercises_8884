{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useTimer = () => {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [randomNumber, setRandomNumber] = useState(null);\n  const MIN = 1;\n  const MAX = 100;\n  const ONE_SECOND = 1000;\n  const REMAINDER_TEN = 10;\n  useEffect(() => {\n    const timeInterval = setInterval(() => {\n      const newTimer = timer + 1;\n      const mod10 = newTimer > 0 && newTimer % REMAINDER_TEN; // Nos múltiplos de 10 do timer, um novo número aleatório é gerado\n\n      if (mod10 === 0) {\n        setRandomNumber(Math.round(Math.random() * (MAX - MIN) + MIN));\n      }\n\n      setTimer(newTimer);\n    }, ONE_SECOND);\n    return () => {\n      clearInterval(timeInterval);\n    };\n  }, [timer]);\n  const REMAINDER_THREE = 3;\n  const REMAINDER_FIVE = 5;\n  const FOUR_SECONDS = 4000;\n  const isMultiple = randomNumber && (randomNumber % REMAINDER_THREE === 0 || randomNumber % REMAINDER_FIVE === 0);\n  useEffect(() => {\n    if (isMultiple) {\n      setTimeout(() => {\n        setRandomNumber(null);\n      }, FOUR_SECONDS);\n    }\n  }, [randomNumber, isMultiple]);\n  return {\n    timer,\n    randomNumber,\n    isMultiple\n  };\n};\n\n_s(useTimer, \"DVchlZAkeNWdU/aXrqV4eQpYcOo=\");\n\nexport default useTimer;","map":{"version":3,"sources":["/home/arthur/Documentos/Trybe/trybe-exercises/2 - Desenvolvimento Front-end/Bloco_18 (Context API e React Hooks)/dia_3(useEffect e Custom Hooks)/fixation/src/useTimer.js"],"names":["useState","useEffect","useTimer","timer","setTimer","randomNumber","setRandomNumber","MIN","MAX","ONE_SECOND","REMAINDER_TEN","timeInterval","setInterval","newTimer","mod10","Math","round","random","clearInterval","REMAINDER_THREE","REMAINDER_FIVE","FOUR_SECONDS","isMultiple","setTimeout"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMO,GAAG,GAAG,CAAZ;AACA,QAAMC,GAAG,GAAG,GAAZ;AACA,QAAMC,UAAU,GAAG,IAAnB;AACA,QAAMC,aAAa,GAAG,EAAtB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,YAAY,GAAGC,WAAW,CAAC,MAAM;AACrC,YAAMC,QAAQ,GAAGV,KAAK,GAAG,CAAzB;AACA,YAAMW,KAAK,GAAGD,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,GAAGH,aAAzC,CAFqC,CAIrC;;AACA,UAAII,KAAK,KAAK,CAAd,EAAiB;AACfR,QAAAA,eAAe,CAACS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBT,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAD,CAAf;AACD;;AAEDH,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,KAV+B,EAU7BJ,UAV6B,CAAhC;AAYA,WAAO,MAAM;AACXS,MAAAA,aAAa,CAACP,YAAD,CAAb;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACR,KAAD,CAhBM,CAAT;AAkBA,QAAMgB,eAAe,GAAG,CAAxB;AACA,QAAMC,cAAc,GAAG,CAAvB;AACA,QAAMC,YAAY,GAAG,IAArB;AACA,QAAMC,UAAU,GAAGjB,YAAY,KACzBA,YAAY,GAAGc,eAAf,KAAmC,CAAnC,IAAwCd,YAAY,GAAGe,cAAf,KAAkC,CADjD,CAA/B;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,UAAJ,EAAgB;AACdC,MAAAA,UAAU,CAAC,MAAM;AACfjB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEPe,YAFO,CAAV;AAGD;AACF,GANQ,EAMN,CAAChB,YAAD,EAAeiB,UAAf,CANM,CAAT;AAQA,SAAO;AACLnB,IAAAA,KADK;AAELE,IAAAA,YAFK;AAGLiB,IAAAA;AAHK,GAAP;AAKD,CA9CD;;GAAMpB,Q;;AAgDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useTimer = () => {\n  const [timer, setTimer] = useState(0);\n  const [randomNumber, setRandomNumber] = useState(null);\n\n  const MIN = 1;\n  const MAX = 100;\n  const ONE_SECOND = 1000;\n  const REMAINDER_TEN = 10;\n\n  useEffect(() => {\n    const timeInterval = setInterval(() => {\n      const newTimer = timer + 1;\n      const mod10 = newTimer > 0 && newTimer % REMAINDER_TEN;\n\n      // Nos múltiplos de 10 do timer, um novo número aleatório é gerado\n      if (mod10 === 0) {\n        setRandomNumber(Math.round(Math.random() * (MAX - MIN) + MIN));\n      }\n\n      setTimer(newTimer);\n    }, ONE_SECOND);\n\n    return () => {\n      clearInterval(timeInterval);\n    };\n  }, [timer]);\n\n  const REMAINDER_THREE = 3;\n  const REMAINDER_FIVE = 5;\n  const FOUR_SECONDS = 4000;\n  const isMultiple = randomNumber\n    && (randomNumber % REMAINDER_THREE === 0 || randomNumber % REMAINDER_FIVE === 0);\n\n  useEffect(() => {\n    if (isMultiple) {\n      setTimeout(() => {\n        setRandomNumber(null);\n      }, FOUR_SECONDS);\n    }\n  }, [randomNumber, isMultiple]);\n\n  return {\n    timer,\n    randomNumber,\n    isMultiple,\n  };\n};\n\nexport default useTimer;"]},"metadata":{},"sourceType":"module"}