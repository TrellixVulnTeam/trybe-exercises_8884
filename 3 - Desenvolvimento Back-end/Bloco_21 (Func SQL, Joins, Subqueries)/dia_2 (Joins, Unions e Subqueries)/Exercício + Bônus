*** EXERCÍCIO ***
-- Exercício 1: Utilizando o INNER JOIN , encontre as vendas nacionais ( domestic_sales ) e internacionais ( international_sales ) de cada filme.
SELECT title, b.domestic_sales, b.international_sales 
FROM Pixar.Movies AS m
INNER JOIN Pixar.BoxOffice AS b
ON m.id = movie_id;

-- Exercício 2: Utilizando o INNER JOIN , faça uma busca que retorne o número de vendas para cada filme que possui um número maior de vendas internacionais ( international_sales ) do que vendas nacionais ( domestic_sales ).
SELECT title, b.domestic_sales, b.international_sales 
FROM Pixar.Movies AS m
INNER JOIN Pixar.BoxOffice AS b
ON m.id = movie_id AND b.international_sales > b.domestic_sales;

-- Exercício 3: Utilizando o INNER JOIN , faça uma busca que retorne os filmes e sua avaliação ( rating ) em ordem decrescente.
SELECT title, b.rating
FROM Pixar.Movies AS m
INNER JOIN Pixar.BoxOffice AS b
ON m.id = movie_id
ORDER BY b.rating DESC;

-- Exercício 4: Utilizando o LEFT JOIN , faça uma busca que retorne todos os dados dos cinemas, mesmo os que não possuem filmes em cartaz e, adicionalmente, os dados dos filmes que estão em cartaz nestes cinemas. Retorne os nomes dos cinemas em ordem alfabética.
SELECT * FROM Pixar.Theater AS t
LEFT JOIN Pixar.Movies AS m
ON m.theater_id = t.id
ORDER BY t.name;

-- Exercício 5: Utilizando o RIGHT JOIN , faça uma busca que retorne todos os dados dos filmes, mesmo os que não estão em cartaz e, adicionalmente, os dados dos cinemas que possuem estes filmes em cartaz. Retorne os nomes dos cinemas em ordem alfabética.
SELECT * FROM Pixar.Theater AS t
RIGHT JOIN Pixar.Movies AS m
ON m.theater_id = t.id
ORDER BY t.name;

-- Exercício 6: Faça duas buscas, uma utilizando SUBQUERY e outra utilizando INNER JOIN , que retornem os títulos dos filmes que possuem avaliação maior que 7.5.
-- COM INNER
SELECT title, rating FROM Pixar.Movies AS m
INNER JOIN Pixar.BoxOffice
ON m.id = movie_id AND rating > 7.5;

SELECT m.title, (
	SELECT rating FROM Pixar.BoxOffice
    WHERE movie_id = m.id
) AS `rating`
FROM Pixar.Movies AS m
WHERE `rating` > 7.5;

-- Exercício 7: Faça duas buscas, uma utilizando SUBQUERY e outra utilizando INNER JOIN , que retornem as avaliações dos filmes lançados depois de 2009.
SELECT title, rating, year FROM Pixar.Movies AS m
INNER JOIN Pixar.BoxOffice
ON m.id = movie_id AND year > 2009;

SELECT m.title, (
	SELECT rating FROM Pixar.BoxOffice
    WHERE movie_id = m.id
) AS `rating`, m.year
FROM Pixar.Movies AS m
WHERE year > 2009;

-- Exercício 8: Utilizando o EXISTS , selecione o nome e localização dos cinemas que possuem filmes em cartaz.
SELECT name, location FROM Pixar.Theater AS t
WHERE EXISTS (
	SELECT * FROM Pixar.Movies AS m
    WHERE t.id = m.theater_id
);

-- Exercício 9: Utilizando o EXISTS , selecione o nome e localização dos cinemas que não possuem filmes em cartaz.
SELECT name, location FROM Pixar.Theater AS t
WHERE NOT EXISTS (
	SELECT * FROM Pixar.Movies AS m
    WHERE t.id = m.theater_id
);

*** Bônus *** 
-- Exercício 10: Utilizando o INNER JOIN , selecione todas as informações dos filmes com avaliação maior que 8 e que estejam em cartaz.
SELECT * FROM Pixar.Movies AS m
INNER JOIN Pixar.BoxOffice AS b
ON b.movie_id = m.id
AND rating > 8
WHERE EXISTS (
	SELECT * FROM Pixar.Theater AS t
    WHERE t.id = m.theater_id
);

-- ALTERNATIVA
SELECT * FROM Pixar.Movies AS m
INNER JOIN BoxOffice b ON b.movie_id = m.id
WHERE
    b.rating > 8 AND m.theater_id IS NOT NULL;

-- Exercício 11: Utilizando o SELF JOIN , selecione os títulos e duração dos filmes que possuem o mesmo diretor.
SELECT t1.title, t1.length_minutes, t2.title, t2.length_minutes
FROM Pixar.Movies AS t1, Pixar.Movies AS t2
WHERE t1.director = t2.director AND t1.title <> t2.title;

-- Exercício 12: Faça duas buscas, uma utilizando SUBQUERY e outra utilizando INNER JOIN , que retornem o título dos filmes que arrecadaram 500 milhões ou mais, e que possuem duração maior que 110 minutos.
-- COM INNER JOIN
SELECT m.title, (b.domestic_sales + b.international_sales) AS `Total Sales`, m.length_minutes
FROM Pixar.Movies AS m
INNER JOIN Pixar.BoxOffice AS b
ON m.id = b.movie_id
AND b.domestic_sales + b.international_sales >= 500000000
AND m.length_minutes > 110;

-- COM SUBQUERY
SELECT m.title
FROM Pixar.Movies AS m
WHERE id IN (
	SELECT movie_id FROM Pixar.BoxOffice AS b
    WHERE b.domestic_sales + b.international_sales >= 500000000
    AND m.length_minutes > 110
);

-- ALTERNATIVA C/ SUBQUERY
SELECT m.title
FROM Pixar.Movies m
WHERE m.id 
IN (
SELECT b.movie_id
FROM BoxOffice b
WHERE b.international_sales >= 500000000)
AND m.length_minutes > 110;
